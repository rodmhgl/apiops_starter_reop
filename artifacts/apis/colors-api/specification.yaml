openapi: 3.0.1
info:
  title: Colors API
  description: Colors API
  termsOfService: https://github.com/markharrison/ColorsAPI/blob/master/LICENSE
  contact:
    name: Mark Harrison
    url: https://github.com/markharrison/ColorsAPI
    email: mark.coloursapi@harrison.ws
  license:
    name: Use under MIT License
    url: https://github.com/markharrison/ColorsAPI/blob/master/LICENSE
  version: '1.0'
servers:
  - url: http://apiopsdevapimlab.azure-api.net
paths:
  /colours:
    get:
      tags:
        - colours
      summary: Get colours
      description: Returns all colours.
      operationId: GetColours
      responses:
        '200':
          description: Success - returns list of colours
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ColoursItem'
              example: ''
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ColoursItem'
              example:
                - id: 0
                  name: string
                  data: string
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ColoursItem'
              example:
                - id: 0
                  name: string
                  data: string
    post:
      tags:
        - Colors
      summary: Update / create colours
      description: Updates colours - creates colour if it doesn't exist
      operationId: UpdateColours
      requestBody:
        description: Colors to update
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ColoursItem'
            example:
              - id: 0
                name: string
                data: string
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ColoursItem'
            example:
              - id: 0
                name: string
                data: string
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ColoursItem'
            example:
              - id: 0
                name: string
                data: string
      responses:
        '201':
          description: Success - colours updated/created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example:
                id: 0
                name: string
                data: string
            text/json:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example:
                id: 0
                name: string
                data: string
        '422':
          description: Unprocessable Entity
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
    delete:
      tags:
        - Colors
      summary: Delete colours
      description: Deletes all colours.
      operationId: DeletesColours
      responses:
        '204':
          description: Success - all colours deleted
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example:
                id: 0
                name: string
                data: string
            text/json:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example:
                id: 0
                name: string
                data: string
  '/colours/{colourId}':
    get:
      tags:
        - Colors
      summary: Get colour by id
      description: 'Returns colour specified by {colourId} (must be between 1 and 1000).'
      operationId: GetColourById
      parameters:
        - name: colourId
          in: path
          description: Format - int32. Id of Color to return
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success - returns colour
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example:
                id: 0
                name: string
                data: string
            text/json:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example:
                id: 0
                name: string
                data: string
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '422':
          description: Unprocessable Entity
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
    post:
      tags:
        - Colors
      summary: Update / create colour by id
      description: 'Updates colour specified by {colourId} (must be between 1 and 1000);  use {colourId} = 0 to insert new colour'
      operationId: UpdateColourById
      parameters:
        - name: colourId
          in: path
          description: Format - int32. Id of Color to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Colors to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ColoursItem'
            example:
              id: 0
              name: string
              data: string
          text/json:
            schema:
              $ref: '#/components/schemas/ColoursItem'
            example:
              id: 0
              name: string
              data: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/ColoursItem'
            example:
              id: 0
              name: string
              data: string
      responses:
        '201':
          description: Success - colour created/updated
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example:
                id: 0
                name: string
                data: string
            text/json:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example:
                id: 0
                name: string
                data: string
        '422':
          description: Unprocessable Entity
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
    delete:
      tags:
        - Colors
      summary: Delete colour by id
      description: 'Deletes colour specified by {colourId} (must be between 1 and 1000).'
      operationId: DeleteColourById
      parameters:
        - name: colourId
          in: path
          description: Format - int32. Id of Color to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Success - colour deleted
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example:
                id: 0
                name: string
                data: string
            text/json:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example:
                id: 0
                name: string
                data: string
        '422':
          description: Unprocessable Entity
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
  /colours/findbyname:
    get:
      tags:
        - Colors
      summary: Get colour by name
      description: 'Returns colour specified by {colourName} '
      operationId: GetColourByName
      parameters:
        - name: colourName
          in: query
          description: Name of Color to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success - returns colour
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example:
                id: 0
                name: string
                data: string
            text/json:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example:
                id: 0
                name: string
                data: string
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
  /colours/random:
    get:
      tags:
        - Colors
      summary: Get random colour
      description: Returns random colour.
      operationId: GetRandomColour
      responses:
        '200':
          description: Success - returns random colour
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example:
                id: 0
                name: string
                data: string
            text/json:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example:
                id: 0
                name: string
                data: string
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
  /colours/reset:
    post:
      tags:
        - Colors
      summary: Reset colours
      description: Reset colours to default.
      operationId: ResetColours
      responses:
        '201':
          description: Success - colours reset
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example:
                id: 0
                name: string
                data: string
            text/json:
              schema:
                $ref: '#/components/schemas/ColoursItem'
              example:
                id: 0
                name: string
                data: string
components:
  schemas:
    ColoursItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        data:
          type: string
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]